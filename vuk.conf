///////////////////////////////////////////////////////////////////////////////////////
///////// > openSMILE configuration file for ComParE vocalistions <  //////////////////
/////////                                                            //////////////////
///////// (c) 2014 by audEERING                                      //////////////////
/////////     All rights reserved. See file COPYING for details.     //////////////////
///////////////////////////////////////////////////////////////////////////////////////



[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cWaveSource
instance[fr1].type=cFramer
instance[pe2].type=cVectorPreemphasis
instance[w1].type=cWindower
instance[fft1].type=cTransformFFT
instance[fftmp1].type=cFFTmagphase
instance[acf].type=cAcf
instance[cepstrum].type=cAcf
instance[pitchACF].type=cPitchACF
instance[specScale].type=cSpecScale
instance[pitchShs].type=cPitchShs
instance[formantLpc].type=cFormantLpc
instance[formantSmoother].type=cFormantSmoother
instance[pitchJitter].type=cPitchJitter
instance[mspec].type=cMelspec
instance[mfcc].type=cMfcc
instance[energy].type=cEnergy
instance[mzcr].type=cMZcr
instance[cms].type=cFullinputMean
instance[cmsD].type=cFullinputMean
instance[cmsA].type=cFullinputMean
instance[vc1].type=cVectorConcat
instance[delta1].type=cDeltaRegression
instance[delta2].type=cDeltaRegression
instance[delta1e].type=cDeltaRegression
instance[delta2e].type=cDeltaRegression
instance[deltapitch].type=cDeltaRegression
instance[deltazcr].type=cDeltaRegression
instance[framestacking].type=cFunctionals
instance[csvout].type=cCsvSink
nThreads=1
printLevelStats=0

[waveIn:cWaveSource]
writer.dmLevel=wave
filename=\cm[inputfile(I){test.wav}:name of input file]
;buffersize=16000
monoMixdown=1

[fr1:cFramer]
reader.dmLevel=wave
writer.dmLevel=outp
frameSize = 0.0250
frameStep = 0.010
frameCenterSpecial = left

[pe2:cVectorPreemphasis]
reader.dmLevel=outp
writer.dmLevel=output
k=0.97


[w1:cWindower]
reader.dmLevel=output
writer.dmLevel=winoutput
winFunc = ham
gain = 1.0

[fft1:cTransformFFT]
reader.dmLevel=winoutput
writer.dmLevel=fftc1

[fftmp1:cFFTmagphase]
reader.dmLevel=fftc1
writer.dmLevel=fft1

[acf:cAcf]
reader.dmLevel=fft1
writer.dmLevel=acf
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 0

[cepstrum:cAcf]
reader.dmLevel=fft1
writer.dmLevel=cepstrum
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 1

[pitchACF:cPitchACF]
  ; the pitchACF component must ALWAYS read from acf AND cepstrum in the given order!
reader.dmLevel=acf;cepstrum
writer.dmLevel=pitch
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
copyInputName = 1
processArrayFields = 0
maxPitch = 500
voiceProb = 1
voiceQual = 0
HNR = 1
HNRdB = 1
F0 = 1
F0raw = 0
F0env = 0
voicingCutoff = 0.350000

[specScale:cSpecScale]
buffersize = 1000
reader.dmLevel=fft1
writer.dmLevel=logScaleFft1
scale=oct
processArrayFields=0
logScaleBase=2
minF=25
maxF=-1
nPointsTarget=0

[pitchShs:cPitchShs]
buffersize = 1000
reader.dmLevel = logScaleFft1
writer.dmLevel = pitch2
nameAppend = pitchShs
processArrayFields = 0
voicingCutoff = 0.55
nHarmonics = 15
compressionFactor = 0.85
octaveCorrection = 1

[pitchJitter:cPitchJitter]
reader.dmLevel = wave
writer.dmLevel = jitter
writer.levelconf.nT = 1000
copyInputName = 1
F0reader.dmLevel = pitch
F0field = F0
searchRangeRel = 0.250000
jitterLocal = 1
jitterDDP = 1
jitterLocalEnv = 0
jitterDDPEnv = 0
shimmerLocal = 1
shimmerLocalEnv = 0
onlyVoiced = 0
inputMaxDelaySec = 2.0



[formantLpc:cFormantLpc]
reader.dmLevel=mfcc1
writer.dmLevel=formants
processArrayFields=0
nFormants=-1
saveFormants=1
saveIntensity=0
saveNumberOfValidFormants=0
saveBandwidths=1
minF=50
maxF=5500
useLpSpec=0
medianFilter=0
octaveCorrection=0

[formantSmoother:cFormantSmoother]
reader.dmLevel=formants
writer.dmLevel=smoothFormants
processArrayFields=0
medianFilter0=0
postSmoothing=0
postSmoothingMethod=simple
F0field=F0final
formantBandwidthField=formantBand
formantFreqField=formantFreq
formantFrameIntensField=formantFrameIntens
intensity=0
nFormants=5
formants=1
bandwidths=0
saveEnvs=0
no0f0=0



[mspec:cMelspec] ###################  ####MFCCS$$###########   #####################################
reader.dmLevel=fft1
writer.dmLevel=mspec1
htkcompatible = 1
nBands = 26
usePower = 1
lofreq = 0
hifreq = 8000

[mfcc:cMfcc]
reader.dmLevel=mspec1
writer.dmLevel=mfcc1
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
firstMfcc = 1
lastMfcc =  12
htkcompatible = 1

[cms:cFullinputMean]
reader.dmLevel=mfcc1
writer.dmLevel=mfcc1m
multiLoopMode=1

[cmsD:cFullinputMean]
reader.dmLevel=mfcc1de
writer.dmLevel=mfcc1dem
multiLoopMode=1

[cmsA:cFullinputMean]
reader.dmLevel=mfcc1dede
writer.dmLevel=mfcc1dedem
multiLoopMode=1


[vc1:cVectorConcat]
reader.dmLevel=mfcc1m;energy;mfcc1dem;energyDe;mfcc1dedem;energyDede
writer.dmLevel=ft0
processArrayFields=0

[delta1:cDeltaRegression]
reader.dmLevel=mfcc1
writer.dmLevel=mfcc1de
deltawin=2
blocksize=1

[delta2:cDeltaRegression]
reader.dmLevel=mfcc1de
writer.dmLevel=mfcc1dede
deltawin=2
blocksize=1

[delta1e:cDeltaRegression]
reader.dmLevel=energy
writer.dmLevel=energyDe
deltawin=2
blocksize=1

[delta2e:cDeltaRegression]
reader.dmLevel=energyDe
writer.dmLevel=energyDede
deltawin=2
blocksize=1

[deltapitch:cDeltaRegression]
reader.dmLevel=pitch
writer.dmLevel=pitchde
deltawin=2
blocksize=1
onlyInSegments=1
zeroSegBound=1

[deltazcr:cDeltaRegression]
reader.dmLevel=zcr
writer.dmLevel=zcrde
deltawin=2
blocksize=1

[energy:cEnergy]
reader.dmLevel=outp
writer.dmLevel=energy
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
htkcompatible=1

[mzcr:cMZcr]
reader.dmLevel=outp
writer.dmLevel=zcr
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
copyInputName = 1
processArrayFields = 1
zcr = 1
amax = 0
mcr = 0
maxmin = 0
dc = 0

[framestacking:cFunctionals]
reader.dmLevel = mfcc1m;energy;mfcc1dem;energyDe;mfcc1dedem;energyDede;pitch;pitch2;pitchde;jitter;zcr;zcrde
;ft0
writer.dmLevel = fts
;frameCenterSpecial = mid
frameCenterFrames = \cm[stackC{2}:frame center]
frameSizeFrames = \cm[stack(S){5}:number of frames to stack]
frameStepFrames = 1
functionalsEnabled = Moments
Moments.variance = 0
Moments.stddev = 1
Moments.skewness = 0
Moments.kurtosis = 0
Moments.amean = 1
noPostEOIprocessing = 0

[csvout:cCsvSink]
reader.dmLevel = mfcc1m;energy;mfcc1dem;energyDe;mfcc1dedem;energyDede;pitch;pitch2;pitchde;smoothFormants;jitter;zcr;zcrde;fts
filename = \cm[output(O){output.csv}:file name of the output csv file]
delimChar = ;
append = 0
frameIndex = 1
frameLength = 1
frameTime = 1
timestamp = 1
printHeader = 1
flush = 0